1 + ---
2 + layout: post
3 + title: "Creating a reviewer for article using OpenAI"
4 + excerpt: ""
5 + thumbnail_image: ../../static/images/blog/...
6 + cover_image: ../../static/images/blog/...
7 + authors:
8 +   - thiery
9 + tags:
10 + ---
11 +
12 + At Marmelab we write a lot of blog article, and reviewing and improving them take time.
13 + Ai like chatgpt, are great to improve text, so what if we created an A.I. bot that would review article.
14 + We write our blog article by opening pull request on the blog repository. So what if we had a github actions that would review our article using OpenAI.
15 +
16 + The first order of business is to call OpenAI with the article content and the right prompt. I would integrate with github as a second step.
17 +
18 + Calling the OpenAi API is straightforward thanks to the [openai](https://github.com/openai/openai-node) package. Just follow the README.
19 + Finding the right prompt however was another matter entirely.
20 +
21 + ## The quest for the good prompt
22 +
23 + I will not run you through all the different version of the prompt, instead here is the lesson I learned:
24 +
25 + ### The AI love to explain what it does
26 +
27 + The AI being created as an agent love to talk, but in my case I just wanted the result. So the instruction `Do not explain what you are doing` is invaluable.
28 +
29 + ### The AI can generate json rather reliably if you ask correctly
30 +
31 + You can have the AI format its response in json reliably, by providing a template.
32 +
33 + ```json
34 + [
35 +     {
36 +         "comment": "<comment targeting one line>",
37 +         "lineNumber": <line_number>,
38 +         "suggestion": "<The text to replace the existing line with. Leave empty, when no suggestion is applicable, must be related to the comment>",
39 +     }
40 + ]
41 + ```
42 +
43 + Note it tends to wrap the result in a ````json` tag, even when you tell it not to.
44 +
45 + ### The AI does not know how to count
46 +
47 + At first I passed the article directly, and got back an array of comments. But the lineNumber were wrong. They were ofter bigger than the size of the text.
48 + The funny things is that it was able to quote the line it targeted when asked to.
49 + In the end I added the lineNumber at the start of every line. As is the case in the github diff.
50 + But even like this it still get it wrong sometimes, albeit way more rarely.
51 +
52 + ### The AI result is random
53 +
54 + It should be obvious, but I was still surprised, how the same prompt could get hugely different result. Sometime I still get answer not in json format at all.
55 +
56 + ### The AI will want to do what you ask, even when there is nothing todo.
57 +
58 + When you add the AI to return an array of comment, it will return comments, even if there is nothing to improve. I had to tell him specifically to return nothing if there is nothing to say.
59 +
60 + The final prompt (for now)
61 +
62 + ```
63 + Your task is to review pull requests on a technical blog. Instructions:
64 +   - Do not explain what you're doing.
65 +   - Provide the response in following JSON format, And return only the json:
66 +
67 +   [
68 +       {
69 +           "comment": "<comment targeting one line>",
70 +           "lineNumber": <line_number>,
71 +           "suggestion": "<The text to replace the existing line with. Leave empty, when no suggestion is applicable, must be related to the comment>",
72 +       }
73 +   ]
74 +   - returned result must only contains valid json
75 +   - Propose change to text and code.
76 +   - Fix typo, grammar and spelling
77 +   - ensure short sentence
78 +   - ensure one idea per sentence
79 +   - simplify complex sentence.
80 +   - No more than one comment per line
81 +   - One comment can address several issues
82 +   - Provide comments and suggestions ONLY if there is something to improve or fix, otherwise return an empty array.
83 +
84 +   Git diff of the article to review:
85 +
86 + ```diff
87 + ${diff}
88 + ```
89 + ```
90 +
91 + ## Integrating with github API
92 +
93 + To integrate with the github api in a github action I used [@octokit/rest](https://github.com/octokit/rest.js)
94 + For what I wanted I needed to:
95 +
96 + - retrieve the current pull request details
97 + - retrieve the diff
98 + - create the review
99 +
100 + ### Retrieving the current pull request details
101 +
102 + To retrieve the pull request details in a github actions context, you must first execute the `actions/checkout@v3` action.
103 + Then using the GITHUB_EVENT_PATH environment variable, you can read the repository information with
104 +
105 + ```ts
106 + const { repository, number } = JSON.parse(
107 +   readFileSync(process.env.GITHUB_EVENT_PATH || "", "utf8")
108 + );
109 + return {
110 +   owner: repository.owner.login,
111 +   repo: repository.name,
112 +   pull_number: number,
113 + };
114 + ```
115 +
116 + ### Retrieving the diff
117 +
118 + To retrieve the diff you can use `octokit.pulls.get`
119 +
120 + ```ts
121 + const response = await octokit.pulls.get({
122 +   owner,
123 +   repo,
124 +   pull_number,
125 +   mediaType: { format: "diff" },
126 + });
127 + ```
128 +
129 + ### creating the review
130 +
131 + Finally after you have retrieved the comments using OpenAi you can create a code review with:
132 +
133 + ```ts
134 + await octokit.pulls.createReview({
135 +   owner,
136 +   repo,
137 +   pull_number,
138 +   comments,
139 +   event: "COMMENT",
140 + });
141 + ```
142 +
143 + A github comment is composed of line, path and body. I placed the comment and the suggestion in the body
144 +
145 + ```ts
146 + body: `${item.comment}
147 + ```suggestion
148 + ${item.suggestion}
149 + ````;
150 + ```
151 +
152 + Following the same syntax as the one on the browser. Sadly the suggestion gets escaped by the API, and I ended up with the suggestion rendered as a snippet.
153 + ![comment](soon)
154 + I did not found a way to add a true suggestion.
155 +
156 + ## Conclusion
157 +
158 + Here is the repository of the github actions: [AI Article Reviewer](https://github.com/ThieryMichel/proof-reader-ai)
159 + The action has been published (add link once published) feel free to try it by following the README.
160 + 